# main.py
import argparse
from scanners.web_scanner import WebScanner
from scanners.network_scanner import NetworkScanner
from scanners.software_scanner import SoftwareScanner
from report_generator import ReportGenerator

def main():
    parser = argparse.ArgumentParser(description="Comprehensive Vulnerability Scanner")
    parser.add_argument("target", help="Target URL, IP, or hostname to scan")
    parser.add_argument("--type", choices=["web", "network", "software", "all"], 
                        default="all", help="Type of scan to perform")
    args = parser.parse_args()

    vulnerabilities = []

    print(f"Starting scan of {args.target}")

    try:
        if args.type in ["web", "all"]:
            print("Performing Web Application Scan...")
            web_scanner = WebScanner(args.target)
            web_vulns = web_scanner.scan()
            vulnerabilities.extend(web_vulns)
            print(f"Web scan complete. Found {len(web_vulns)} vulnerabilities.")

        if args.type in ["network", "all"]:
            print("Performing Network Scan...")
            network_scanner = NetworkScanner(args.target)
            network_vulns = network_scanner.scan()
            vulnerabilities.extend(network_vulns)
            print(f"Network scan complete. Found {len(network_vulns)} vulnerabilities.")

        if args.type in ["software", "all"]:
            print("Performing Software Scan...")
            software_scanner = SoftwareScanner(args.target)
            software_vulns = software_scanner.scan()
            vulnerabilities.extend(software_vulns)
            print(f"Software scan complete. Found {len(software_vulns)} vulnerabilities.")

        print("All scans complete. Generating report...")
        report = ReportGenerator(args.target, vulnerabilities)
        report.generate_report()
        report.print_summary()

    except KeyboardInterrupt:
        print("\nScan interrupted by user. Generating report with partial results...")
        report = ReportGenerator(args.target, vulnerabilities)
        report.generate_report()
        report.print_summary()
    except Exception as e:
        print(f"An error occurred during the scan: {e}")

if __name__ == "__main__":
    main()
